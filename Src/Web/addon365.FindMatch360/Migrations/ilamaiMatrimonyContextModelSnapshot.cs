// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using addon365.FindMatch360.Data;

namespace addon365.FindMatch360.Migrations
{
    [DbContext(typeof(ilamaiMatrimonyContext))]
    partial class ilamaiMatrimonyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ProfileForId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProfileMatrimonyProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileForId");

                    b.HasIndex("ProfileMatrimonyProfileId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.CasteMaster", b =>
                {
                    b.Property<int>("CasteMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CasteMasterId");

                    b.ToTable("CasteMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.DoshamMaster", b =>
                {
                    b.Property<int>("DoshamMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoshamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoshamMasterId");

                    b.ToTable("DoshamMasters");

                    b.HasData(
                        new
                        {
                            DoshamMasterId = 1,
                            DoshamName = "Test"
                        },
                        new
                        {
                            DoshamMasterId = 2,
                            DoshamName = "Test2"
                        });
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.EducationCategoryMaster", b =>
                {
                    b.Property<int>("EducationCategoryMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EducationCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationCategoryMasterId");

                    b.ToTable("EducationCategoryMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.EducationMaster", b =>
                {
                    b.Property<int>("EducationMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EducationCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("EducationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationMasterId");

                    b.HasIndex("EducationCategoryId");

                    b.ToTable("EducationMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.EmployeedInMaster", b =>
                {
                    b.Property<int>("EmployeedInMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeedInName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeedInMasterId");

                    b.ToTable("EmployeedInMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.EmployeedIndustryMaster", b =>
                {
                    b.Property<int>("EmployeedIndustryMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeedIndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeedIndustryMasterId");

                    b.ToTable("EmployeedIndustryMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.FamilyStatusMaster", b =>
                {
                    b.Property<int>("FamilyStatusMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamilStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyStatusMasterId");

                    b.ToTable("FamilyStatusMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.FamilyTypeMaster", b =>
                {
                    b.Property<int>("FamilyTypeMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamilyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyTypeMasterId");

                    b.ToTable("FamilyTypeMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.FamilyValuesMaster", b =>
                {
                    b.Property<int>("FamilyValuesMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamilyValuesName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyValuesMasterId");

                    b.ToTable("FamilyValuesMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.GothramMaster", b =>
                {
                    b.Property<int>("GothramMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GothramName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GothramMasterId");

                    b.ToTable("GothramMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.MaritalStatusMaster", b =>
                {
                    b.Property<int>("MaritalStatusMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaritalStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaritalStatusMasterId");

                    b.ToTable("MaritalStatusMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.MotherTongueMaster", b =>
                {
                    b.Property<int>("MotherTongueMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MotherTongueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotherTongueMasterId");

                    b.ToTable("MotherTongueMasters");

                    b.HasData(
                        new
                        {
                            MotherTongueMasterId = 1,
                            MotherTongueName = "Not Selected"
                        },
                        new
                        {
                            MotherTongueMasterId = 2,
                            MotherTongueName = "Tamil"
                        },
                        new
                        {
                            MotherTongueMasterId = 3,
                            MotherTongueName = "Telugu"
                        },
                        new
                        {
                            MotherTongueMasterId = 4,
                            MotherTongueName = "Hindi"
                        },
                        new
                        {
                            MotherTongueMasterId = 5,
                            MotherTongueName = "Kannada"
                        },
                        new
                        {
                            MotherTongueMasterId = 6,
                            MotherTongueName = "Malayalam"
                        },
                        new
                        {
                            MotherTongueMasterId = 7,
                            MotherTongueName = "Marathi"
                        },
                        new
                        {
                            MotherTongueMasterId = 8,
                            MotherTongueName = "Bengali"
                        },
                        new
                        {
                            MotherTongueMasterId = 9,
                            MotherTongueName = "Gujarati"
                        },
                        new
                        {
                            MotherTongueMasterId = 10,
                            MotherTongueName = "Punjabi"
                        },
                        new
                        {
                            MotherTongueMasterId = 11,
                            MotherTongueName = "Sindhi"
                        },
                        new
                        {
                            MotherTongueMasterId = 12,
                            MotherTongueName = "Urdu"
                        },
                        new
                        {
                            MotherTongueMasterId = 13,
                            MotherTongueName = "Oriya"
                        });
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.OccupationMaster", b =>
                {
                    b.Property<int>("OccupationMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("OccupationMasterId");

                    b.ToTable("OccupationMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.ProfileForMaster", b =>
                {
                    b.Property<int>("ProfileForId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProfileFor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileForId");

                    b.ToTable("ProfileForMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.ReligionMaster", b =>
                {
                    b.Property<int>("ReligionMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReligionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligionMasterId");

                    b.ToTable("ReligionMasters");

                    b.HasData(
                        new
                        {
                            ReligionMasterId = 1,
                            ReligionName = "Not Selected"
                        },
                        new
                        {
                            ReligionMasterId = 2,
                            ReligionName = "Hindu"
                        },
                        new
                        {
                            ReligionMasterId = 3,
                            ReligionName = "Muslim - Shia"
                        },
                        new
                        {
                            ReligionMasterId = 4,
                            ReligionName = "Muslim - Sunni"
                        },
                        new
                        {
                            ReligionMasterId = 5,
                            ReligionName = "Muslim - Others"
                        },
                        new
                        {
                            ReligionMasterId = 6,
                            ReligionName = "Christian"
                        },
                        new
                        {
                            ReligionMasterId = 7,
                            ReligionName = "Sikh"
                        },
                        new
                        {
                            ReligionMasterId = 8,
                            ReligionName = "Jain - Digambar"
                        },
                        new
                        {
                            ReligionMasterId = 9,
                            ReligionName = "Jain - Shwetambar"
                        },
                        new
                        {
                            ReligionMasterId = 10,
                            ReligionName = "Jain - Others"
                        },
                        new
                        {
                            ReligionMasterId = 11,
                            ReligionName = "Parsi"
                        },
                        new
                        {
                            ReligionMasterId = 12,
                            ReligionName = "Buddhist"
                        },
                        new
                        {
                            ReligionMasterId = 13,
                            ReligionName = "Inter-Religion"
                        });
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.SubCasteMaster", b =>
                {
                    b.Property<int>("SubCasterMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasteMasterId")
                        .HasColumnType("int");

                    b.HasKey("SubCasterMasterId");

                    b.HasIndex("CasteMasterId");

                    b.ToTable("SubCasteMasters");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", b =>
                {
                    b.Property<Guid>("MatrimonyProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AnyDisability")
                        .HasColumnType("bit");

                    b.Property<short>("BirthNumberinFamily")
                        .HasColumnType("smallint");

                    b.Property<byte>("BodyType")
                        .HasColumnType("tinyint");

                    b.Property<short>("Brothers")
                        .HasColumnType("smallint");

                    b.Property<int?>("CasteMasterId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateandTimeOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisabilityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Drinking")
                        .HasColumnType("tinyint");

                    b.Property<byte>("EatingHabit")
                        .HasColumnType("tinyint");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeedInMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyStatusMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyTypeMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyValuesMasterId")
                        .HasColumnType("int");

                    b.Property<string>("FatherJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("FromAge")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<int?>("GothramMasterId")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lagnam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatusMasterId")
                        .HasColumnType("int");

                    b.Property<short>("MarriedBrothers")
                        .HasColumnType("smallint");

                    b.Property<short>("MarriedSisters")
                        .HasColumnType("smallint");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotherTongueMasterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NativeDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceChavvaiDosham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceRasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceStar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionMasterId")
                        .HasColumnType("int");

                    b.Property<short>("Sisters")
                        .HasColumnType("smallint");

                    b.Property<string>("SkinColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Smoking")
                        .HasColumnType("tinyint");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubCasteMasterId")
                        .HasColumnType("int");

                    b.Property<string>("TimeofBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("UptoAge")
                        .HasColumnType("tinyint");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatrimonyProfileId");

                    b.HasIndex("CasteMasterId");

                    b.HasIndex("EmployeedInMasterId");

                    b.HasIndex("FamilyStatusMasterId");

                    b.HasIndex("FamilyTypeMasterId");

                    b.HasIndex("FamilyValuesMasterId");

                    b.HasIndex("GothramMasterId");

                    b.HasIndex("MaritalStatusMasterId");

                    b.HasIndex("MotherTongueMasterId");

                    b.HasIndex("ReligionMasterId");

                    b.HasIndex("SubCasteMasterId");

                    b.ToTable("MatrimonyProfiles");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfileDoshams", b =>
                {
                    b.Property<int>("ProfileDoshamsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoshamId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfileDoshamsId");

                    b.HasIndex("DoshamId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileDoshams");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfileEducations", b =>
                {
                    b.Property<int>("ProfileEducationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EducationMasterId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfileEducationsId");

                    b.HasIndex("EducationMasterId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileEducations");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePhotos", b =>
                {
                    b.Property<int>("ProfilePhotosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfilePhotosId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePhotos");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceCaste", b =>
                {
                    b.Property<int>("ProfilePreferenceCasteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasteMasterId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfilePreferenceCasteId");

                    b.HasIndex("CasteMasterId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePreferenceCastes");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceEducations", b =>
                {
                    b.Property<int>("ProfileEducationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EducationMasterId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfileEducationsId");

                    b.HasIndex("EducationMasterId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePreferenceEducations");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceReligion", b =>
                {
                    b.Property<int>("ProfilePreferenceReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReligionMasterId")
                        .HasColumnType("int");

                    b.HasKey("ProfilePreferenceReligionId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ReligionMasterId");

                    b.ToTable("ProfilePreferenceReligions");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceSubCaste", b =>
                {
                    b.Property<int>("ProfilePreferenceSubCasteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SubCasteMasterId")
                        .HasColumnType("int");

                    b.HasKey("ProfilePreferenceSubCasteId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("SubCasteMasterId");

                    b.ToTable("ProfilePreferenceSubCastes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.ApplicationUser", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.ProfileForMaster", "ProfileFor")
                        .WithMany()
                        .HasForeignKey("ProfileForId");

                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileMatrimonyProfileId");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.EducationMaster", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.EducationCategoryMaster", "EducationCategory")
                        .WithMany("EducationMasters")
                        .HasForeignKey("EducationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.Masters.SubCasteMaster", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.CasteMaster", "ParentCaste")
                        .WithMany()
                        .HasForeignKey("CasteMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.CasteMaster", "Caste")
                        .WithMany("Profiles")
                        .HasForeignKey("CasteMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.EmployeedInMaster", "EmployeedIn")
                        .WithMany()
                        .HasForeignKey("EmployeedInMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.FamilyStatusMaster", "FamilyStatus")
                        .WithMany("Profiles")
                        .HasForeignKey("FamilyStatusMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.FamilyTypeMaster", "FamilyType")
                        .WithMany("Profiles")
                        .HasForeignKey("FamilyTypeMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.FamilyValuesMaster", "FamilyValues")
                        .WithMany("Profiles")
                        .HasForeignKey("FamilyValuesMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.GothramMaster", "Gothram")
                        .WithMany("Profiles")
                        .HasForeignKey("GothramMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.MaritalStatusMaster", "MaritalStatus")
                        .WithMany("Profiles")
                        .HasForeignKey("MaritalStatusMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.MotherTongueMaster", "MotherTongue")
                        .WithMany("Profiles")
                        .HasForeignKey("MotherTongueMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.ReligionMaster", "Religion")
                        .WithMany("Profiles")
                        .HasForeignKey("ReligionMasterId");

                    b.HasOne("addon365.FindMatch360.Models.Masters.SubCasteMaster", "SubCaste")
                        .WithMany("Profiles")
                        .HasForeignKey("SubCasteMasterId");
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfileDoshams", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.DoshamMaster", "Dosham")
                        .WithMany()
                        .HasForeignKey("DoshamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfileDoshams")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfileEducations", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.EducationMaster", "Education")
                        .WithMany()
                        .HasForeignKey("EducationMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfileEducations")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePhotos", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfilePhotos")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceCaste", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.CasteMaster", "Caste")
                        .WithMany()
                        .HasForeignKey("CasteMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfilePreferenceCastes")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceEducations", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.Masters.EducationMaster", "Education")
                        .WithMany("PreferenceEducations")
                        .HasForeignKey("EducationMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfilePreferenceEducations")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceReligion", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfilePreferenceReligions")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.Masters.ReligionMaster", "Religion")
                        .WithMany("PreferenceReligions")
                        .HasForeignKey("ReligionMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.FindMatch360.Models.MatrimonyProfileModels.ProfilePreferenceSubCaste", b =>
                {
                    b.HasOne("addon365.FindMatch360.Models.MatrimonyProfileModels.Profile", "Profile")
                        .WithMany("ProfilePreferenceSubCastes")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.FindMatch360.Models.Masters.SubCasteMaster", "SubCaste")
                        .WithMany("PreferenceSubCastes")
                        .HasForeignKey("SubCasteMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
