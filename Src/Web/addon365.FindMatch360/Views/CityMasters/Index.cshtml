@model PaginatedList<addon365.FindMatch360.Models.Masters.CityMaster>
@{
    ViewData["Title"] = "Index";
}
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row page-header">
    <div class="col-lg-6 align-self-center ">
        <h2>Dashboard</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Account" asp-action="admin">Home</a></li>
            <li class="breadcrumb-item active">Dashboard</li>
            <li class="breadcrumb-item active">CityMasters</li>
        </ol>
    </div>
    <div class="col-lg-6 align-self-center text-right">
        <a asp-action="Create" class="btn btn-success box-shadow btn-icon btn-rounded"><i class="fa fa-plus"></i> Create New</a>
    </div>
</div>
<section class="main-content">
    <div class="row">
        <div class="col-md-12 card">
            <!--
            <p>
                <a asp-action="Create">Create New</a>
            </p>--->
            <form asp-action="Index" method="get">
                <div class="form-actions no-color">
                    <p>
                        Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                        <input type="submit" value="Search" class="btn btn-default" /> |
                        <a asp-action="Index">Back to Full List</a>
                    </p>
                </div>
            </form>


            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">City Name</a>
                            
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">State Name</a>
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CityName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.State.StateName)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.CityMasterId">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.CityMasterId">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.CityMasterId">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
    </div>
</section>